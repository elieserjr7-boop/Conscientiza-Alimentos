import streamlit as st
import smtplib
import pandas as pd
import pydeck as pdk  # <-- AQUI EST√Å A CORRE√á√ÉO
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# --- CONFIGURA√á√ÉO DA P√ÅGINA ---
st.set_page_config(
    page_title="Alimento Salvo - Ipiranga/PI",
    page_icon="üå±",
    layout="wide"
)

# --- FUN√á√ÉO PARA ENVIAR O E-MAIL (Sua fun√ß√£o original) ---
def enviar_email(nome, endereco, telefone, alimentos):
    try:
        # Usando o sistema de segredos do Streamlit (st.secrets)
        email_remetente = st.secrets["GMAIL_USER"]
        senha_remetente = st.secrets["GMAIL_PASSWORD"]
        email_destinatario = st.secrets["EMAIL_DESTINATARIO"]

        assunto = f"Nova Doa√ß√£o de Alimentos de: {nome}"
        
        corpo_html = f"""
        <html>
        <body>
            <h2>Nova Notifica√ß√£o de Alimentos para Coleta!</h2>
            <p><strong>Nome do Doador:</strong> {nome}</p>
            <p><strong>Endere√ßo para Coleta:</strong> {endereco}</p>
            <p><strong>Telefone para Contato:</strong> {telefone}</p>
            <hr>
            <h3>Alimentos Dispon√≠veis:</h3>
            <p>{alimentos}</p>
        </body>
        </html>
        """
        
        msg = MIMEMultipart()
        msg['From'] = email_remetente
        msg['To'] = email_destinatario
        msg['Subject'] = assunto
        msg.attach(MIMEText(corpo_html, 'html'))

        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login(email_remetente, senha_remetente)
        server.sendmail(email_remetente, email_destinatario, msg.as_string())
        server.quit()
        return True
    except Exception as e:
        # No ambiente de produ√ß√£o, √© melhor logar o erro em vez de printar
        st.error(f"Erro ao configurar o servi√ßo de e-mail: {e}")
        return False

# --- HEADER ---
# Substitua "seu_logo.png" pelo nome do seu arquivo de imagem
try:
    st.image("logo.png", width=150)
except:
    st.write(" ") # Espa√ßo reservado caso n√£o encontre o logo

st.title("Plataforma Alimento Salvo")
st.subheader("Conectando quem tem de sobra com quem precisa em Ipiranga do Piau√≠.")
st.markdown("---")


# --- ESTRUTURA COM ABAS ---
tab_doar, tab_impacto, tab_info = st.tabs([
    "üìù QUERO DOAR!", 
    "üìà NOSSO IMPACTO E ATUA√á√ÉO", 
    "‚ÑπÔ∏è COMO FUNCIONA & D√öVIDAS"
])


# --- ABA 1: FORMUL√ÅRIO DE DOA√á√ÉO ---
with tab_doar:
    st.header("Preencha para agendarmos a coleta")
    
    with st.form("formulario_doacao"):
        st.subheader("Informa√ß√µes para Coleta")
        
        nome_pessoa = st.text_input("Seu Nome Completo:")
        
        rua = st.text_input("Rua/Avenida:")
        bairro = st.text_input("Bairro:")
        
        col1, col2 = st.columns(2)
        with col1:
            numero_casa = st.text_input("N√∫mero:")
        with col2:
            cidade = st.text_input("Cidade:", value="Ipiranga do Piau√≠", disabled=True)

        numero_contato = st.text_input("Seu Telefone/WhatsApp (com DDD):")
        descricao_alimentos = st.text_area("Descreva os alimentos e a quantidade aproximada:")
        
        submitted = st.form_submit_button("Enviar Notifica√ß√£o de Doa√ß√£o")

    if submitted:
        endereco_completo = f"{rua}, n¬∫ {numero_casa}, Bairro {bairro} - {cidade}"
        
        if nome_pessoa and rua and bairro and numero_casa and numero_contato and descricao_alimentos:
            if enviar_email(nome_pessoa, endereco_completo, numero_contato, descricao_alimentos):
                st.success("Notifica√ß√£o enviada com sucesso! Agradecemos muito a sua colabora√ß√£o. Em breve entraremos em contato.")
                st.balloons()
                st.markdown("---")
                st.write("#### Ajude-nos a ir mais longe!")
                st.write("Compartilhe nosso projeto com seus amigos e familiares. Juntos, podemos combater ainda mais o desperd√≠cio.")
                # Link de compartilhamento para WhatsApp
                st.link_button("Compartilhar no WhatsApp", "https://wa.me/?text=Estou%20ajudando%20a%20combater%20o%20desperd√≠cio%20de%20alimentos%20com%20o%20projeto%20Alimento%20Salvo%20em%20Ipiranga/PI!%20Conhe√ßa%20voc√™%20tamb√©m:%20combateaodesperdicioipi.streamlit.app")
            else:
                st.error("Desculpe, ocorreu um erro ao enviar sua notifica√ß√£o. Verifique se suas credenciais de e-mail est√£o configuradas corretamente ou tente novamente mais tarde.")
        else:
            st.warning("Por favor, preencha todos os campos antes de enviar.")


# --- ABA 2: CALCULADORA DE IMPACTO E MAPA ---
with tab_impacto:
    col1, col2 = st.columns(2, gap="large")

    with col1:
        st.header("Calcule o Impacto da Sua Doa√ß√£o!")
        
        refeicoes_por_item = {
            "Arroz, Feij√£o ou Macarr√£o (Kg)": 4,
            "P√£es (unidade)": 2,
            "Frutas e Legumes (Kg)": 3,
            "Leite (Litro)": 4
        }
        alimento_selecionado = st.selectbox(
            "Qual o principal alimento que voc√™ vai doar?",
            options=list(refeicoes_por_item.keys())
        )
        quantidade = st.number_input("Qual a quantidade?", min_value=0.5, step=0.5)

        if st.button("Calcular Impacto"):
            total_refeicoes = refeicoes_por_item[alimento_selecionado] * quantidade
            st.success(f"üéâ Sua doa√ß√£o pode gerar aproximadamente **{int(total_refeicoes)} refei√ß√µes!**")

    with col2:
        st.header("Nossa √Årea de Atua√ß√£o")
        st.success("Atendemos em **toda zona urbana de Ipiranga do Piau√≠!**")
        st.write("O c√≠rculo no mapa representa nossa √°rea de coleta.")
        
        # C√ìDIGO DO MAPA ATUALIZADO
        lat_ipiranga = -6.8225
        lon_ipiranga = -41.7328

        view_state = pdk.ViewState(
            latitude=lat_ipiranga,
            longitude=lon_ipiranga,
            zoom=13,
            pitch=50,
        )

        layer = pdk.Layer(
            "ScatterplotLayer",
            data=pd.DataFrame({'lat': [lat_ipiranga], 'lon': [lon_ipiranga]}),
            get_position='[lon, lat]',
            get_color='[200, 30, 0, 160]',
            get_radius=4000,
        )

        st.pydeck_chart(pdk.Deck(layers=[layer], initial_view_state=view_state))

# --- ABA 3: INFORMA√á√ïES E D√öVIDAS ---
with tab_info:
    st.header("Como sua doa√ß√£o funciona na pr√°tica")
    st.markdown("""
    1.  **üìù Preenchimento do Formul√°rio:** Voc√™ nos informa os detalhes da doa√ß√£o aqui no site.
    2.  **üì± Contato via WhatsApp:** Nossa equipe entrar√° em contato no n√∫mero informado para confirmar os itens e agendar o melhor hor√°rio para a coleta.
    3.  **üöö Coleta Segura:** Um de nossos volunt√°rios ir√° at√© o endere√ßo para retirar a doa√ß√£o.
    4.  **‚ù§Ô∏è Entrega ao Destino:** Os alimentos s√£o imediatamente direcionados para fam√≠lias e institui√ß√µes parceiras em nossa comunidade.
    """)
    st.markdown("---")
    
    st.header("D√∫vidas Frequentes")
    with st.expander("‚ùì Que tipo de alimento posso doar?"):
        st.write("Aceitamos alimentos n√£o perec√≠veis (arroz, feij√£o, macarr√£o, etc.) e tamb√©m alimentos frescos (frutas, legumes, p√£es), desde que estejam em bom estado para consumo.")

    with st.expander("‚ùì Em quanto tempo voc√™s entram em contato?"):
        st.write("Geralmente, nosso contato √© feito em at√© 24 horas √∫teis ap√≥s o envio do formul√°rio.")

    with st.expander("‚ùì H√° algum custo para a coleta?"):
        st.write("N√£o! Nosso servi√ßo √© totalmente volunt√°rio e gratuito, focado em ajudar a comunidade.")
